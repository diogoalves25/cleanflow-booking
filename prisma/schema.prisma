// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstName String
  lastName  String
  phone     String?
  role      String   @default("customer") // customer, cleaner, admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  bookings  Booking[]
  cleanerBookings Booking[] @relation("CleanerBookings")
}

model Service {
  id          String   @id @default(cuid())
  name        String
  description String?
  basePrice   Float
  icon        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  bookings    Booking[]
}

model Booking {
  id                  String   @id @default(cuid())
  customerId          String
  cleanerId           String?
  serviceId           String
  frequency           String   // once, weekly, biweekly, monthly
  date                DateTime
  time                String
  duration            String
  status              String   @default("scheduled") // scheduled, in_progress, completed, cancelled
  
  // Address
  address             String
  city                String
  state               String
  zipCode             String
  
  // Pricing
  basePrice           Float
  discount            Float    @default(0)
  finalPrice          Float
  
  // Additional
  specialInstructions String?
  rating              Int?
  review              String?
  
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  
  customer            User     @relation(fields: [customerId], references: [id])
  cleaner             User?    @relation("CleanerBookings", fields: [cleanerId], references: [id])
  service             Service  @relation(fields: [serviceId], references: [id])
}

model Revenue {
  id        String   @id @default(cuid())
  month     String
  year      Int
  amount    Float
  createdAt DateTime @default(now())
}